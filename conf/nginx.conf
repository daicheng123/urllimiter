#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    include       /usr/local/openrestry/nginx/sites-enabled/*.conf;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;
    error_log   logs/error.log info;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    geoip_country /usr/share/GeoIP/GeoIP.dat;
    lua_package_path "/usr/local/openrestry/nginx/src/?.lua;;";
    include sites/app.conf;
    lua_http10_buffering off; # 禁用 HTTP1.0 里的缓冲机制
    lua_need_request_body off; # openresty 是否在开始处理流程前强制读取请求体数据,这将降低openresty运行效率, 默认off 
    lua_malloc_trim 2000;   # 清理内存的周期,请求2000次后,openresty 会调用 malloc_trim函数,将进程内的空闲内存归还给系统,达到最小内存化占用问题
    lua_shared_dict data 1m;
    
    init_by_lua_block {
      require "resty.core" 
      collectgarbage("collect")
}

    #gzip  on;

    server {
        listen       8082;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        access_by_lua "ngx.header.ser_addr=shabi";
        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}
